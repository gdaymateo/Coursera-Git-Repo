num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Matt")
paste(my_char, collapse = " ", "Matt")
c(my_char, "Matt")
my_name <
- c(paste(mychar, collapse = " "), "Matt")
myname <- c(paste(mychar, collapse = " "), "Matt"))
myname <- c(paste(mychar, collapse = " ", "Matt"))
my_name <- c(paste(my_char, collapse = " ", "Matt"))
my_name <- paste(c(my_char, "Matt"), collapse = " ")
play()
c(my_char, "Matt")
paste(c(my_char, "Matt"), collapse = " ")
nxt()
my_name <- paste(c(my_char, "Matt"), collapse = " ")
my_name <- c(my_char, "Matt")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
?bye
bye()
swirl()
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3],x[5],x[7])
play()
x
c(x[3],x[5],x[7])
c(x[!is.na(x)], 1:3)
c(x[!is.na(x)] & x[1:3])
x[!is.na(x)] & x[1:3]
nxt()
info()
c(x[3],x[5],x[7])
info(c)
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <
- c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector <- c(4,5))
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(my_matrix, 4, 5)
matrix(1:20, 4, 5)
matrix(1:20, nrows - 4, ncols = 5)
matrix(1:20, nrow - 4, ncol = 5)
matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
5 !!= 7
?`!`
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
PLAY()
play()
isTRUE(3)
isTRUE(!3)
nxt()
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
boring_function <- function(x) {x}
submit()
submit(boring_function)
boring_function <- function(x) {}
boring_function <- function(x) {x}
submit()
s boring_function
source boring_function
?source
boring_function <- print(x) {x}
boring_function <- function(x) {
x
}
submit()
?save
save(boring_function)
boring_function <- function(x) {}
boring_function <- function(x) {}
boring_function <- function(x) {
x
}
submit()
submit(boring_function)
?submit
boring_function()
boring_function(x)
boring_function <- function(x) {
x
}
submit()
submit()
submit()
boring_function('My first function!')
source('~/.active-rstudio-document')
submit()
bye()
swirl()
submit()
boring_function('My first function!')
boring_function
submit
submit()
submit()
my_mean(c(4, 5, 10))
bye()
swirl()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]})
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
play()
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
nxt()
?paste
paste("Programming", "is", "fun!")
submit()
telegram("always preceeds")
submit()
submit()
mad_libs("Minneapolis", "disinterested", "bus shelter")
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
play()
lapply(unique_vals, length)
sapply(unique_vals, length)
nxt()
sapply(unique_vals, length)
sapply(flags, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmass, flags$population, summary)
tapply(flags$population, flags$landmass, summary)
ls(plants)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = T, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 1, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weedays(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
plot(cars, x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
str(mtcars)
head(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
str(pollutantmean)
ls()
setwd("old.dir")
setwd(old.dir)
getwd
ls()
setwd("old.dir")
getwd()
list.files
list.files()
setwd("~/specdata")
setwd("specdata")
ls()
list.files()
str(001.csv)
for(i in 1:10) {}
for(i in 1:10) {
print(i)
}
submit()
add2(3,pi)
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
add2(3,pi)
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
x <- 1:20
above(x, 13)
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
columnmean(airquality)
columnMean(airquality)
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
columnmean(airquality)
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
columnmean(airquality)
source('/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T//RtmpDQGja1/bin_op.R')
columnmean(airquality)
source('/private/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T/RtmpDQGja1/functions.R')
?strptime
source('/private/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T/RtmpDQGja1/functions.R')
f(3)
x <- 5
y <- if(x < 3) {}
y <- if(x < 3) {}
y <- if(x < 3) {
NA
} else {10}
y
source('/private/var/folders/07/rw9xx_3d1nx_hvg4wkzxh3q40000gn/T/RtmpDQGja1/functions.R')
?read.csv
read.csv(001.csv)
read.csv("001.csv")
str(read.csv("001.csv"))
m001 <- read.csv("001.csv")
m001
head(m001)
sum(m001$ID)
mean(m001$sulfate)
mean(m001$sulfate, na.rm = TRUE)
?count
mean(read.csv("001.csv"), "sulfate")
mean(read.csv("001.csv"), "sulfate", na.rm = TRUE)
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
getwd()
?exdir
ls()
setwd("old.dir")
setwd(old.dir)
getwd()
ls()
list.files()
setwd("specdata")
getwd()
list.files()
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_end - andy_start
andy_loss
andy_loss <- andy_start - andy_end
any_loss
andy_loss
files <- list.files("diet_data")
files
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names = TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
for (i in 1:5) {}
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
for (i in 1:5) {
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(files_full[i]))
}
str(dat2)
median(dat$Weight)
median(dat$Weight, na.rm = TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight)
ls()
getwd()
list.files
list.files()
rm "diet_data"
?rm
rm("diet_data")
remove("diet_data")
remove("diet_data.zip")
unlink("diet_data.zip")
unlink("diet_data")
list.files()
unlink("diet_data")
list.files()
unlink("diet_data.csv")
list.files()
info("diet_data")
str("diet_data")
summary"diet_data"
summary("diet_data")
file.remove("diet_data")
unlink(diet_data)
setwd("diet_data")
getwd()
list.files()
file.remove()
file.remove(*)
file.remove(all)
setwd(old.dir)
getwd()
unlink(diet_data)
unlink("diet_data")
list.files()
getwd()
setwd("specdata")
getwd()
list.files
list.files()
unlink("diet_data", force)
unlink("diet*")
list.files()
list.files()
source('~/Desktop/Coursera/pollutant.R')
